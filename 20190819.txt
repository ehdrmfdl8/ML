2019. 8.19

파이썬은 언어라기 보다는 정의이다.

파이썬의 페러다임
	객체지향
	함수 기반
	Array 프로그래밍

파이썬의 속도 개선을 위해 Cython을 애호한다.
파이썬 coding style은 총 3가지가 있음
	snake : 소문자 단어 사용, 단어와 단어 사이는 '_' (언더바) 사용, 함수에 사용함  =>  Function에 사용함
	pascal : 단어를 대문자로 시작해서 서로 연결함.  => 사용자가 제작한 class에 사용함
	camel : 단어를 대문자로 시작해서 서로 연결하되, 첫 단어만 소문자로 사용함.   =>  내장된 class에 사용함

Numpy는 속도도 빠르고 사용하기도 쉽다.  하지만, CPU 기반으로 설계되 있다.
	broadcasting : 행렬을 자동으로 맞춰줌
	vectorization
	유니버셜 function : 범용적으로 호환되는 함수

pandas : data 전처리, 기초 통계 분석할 때 사용함. numpy로 만들어짐
	- 전처리 : 기계학습을 위해 필수
	- 기초통계분석 (data에 대한 통찰(insight)를 제시함)
		statsmodel : 복잡한 통계 분석할 때 사용 (R 기반). pandas와 pats(?)로 만들어짐
		scikit learn : 기계학습을 할 때 사용

	* pandas를 그래프로 표현할 때, x축이 index이다.

scithon : 과학분야 16개에 대해 분석하기 적합하게 만든 python

* numpy의 단점 : GPU를 지원하지 않음 (텐서플로우는 GPU를 지원함)
* 분석은 크게 두 가지 관점으로 분류한다.
	1. 통계적 관점 : 설명 가능한 방법의 모델
	2. CS(Computer Science)적 관점 : 성능(예측 정확도) 중심

국내 유일한 scipy 책
	: Elegant SciPy (by OREILLY)

Jupyter notebook : Markdown + LaTeX => 논문 등의 책으로 만들 수 있음

* python keyword와 builtin 표시
	- keyword : 두꺼운 초록색
	- builtin : 안 두꺼운 초록색

* 주피터노트북 유용한 단축키
	Alt + mouse drag : 부분 선택
	Esc -> m -> p : markup(?)
	Ctrl + Shift + p : command 단축키 setting
	shift + tab : 도움말   1번, 2번, 4번 누름에 따라 종류 달라짐


* script 창에 '!' 를 사용하면 console 창에 사용한 것과 같은 효과를 낸다.
	!pip install watermark

* script 창에 '%%'를 사용하면 magic command라는 개념으로 실행됨.
  ('%%'는 반드시 주피터노트북의 첫 줄에 있어야 정상 동작하는 듯 하다.)

* data 구분
	* 정형 data : 직사각형화 된 data
	* 비정형 data : 직사각형의 크기를 안 맞춘 data(?). 이세상 data의 80~90%에 속함
	* 반정형 data : 헤더가 meta data인 data(?)

